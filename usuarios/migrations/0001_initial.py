# Generated by Django 2.1.3 on 2018-12-01 19:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(help_text='Defina seu nome, exemplo: Fulano', max_length=40, verbose_name='Nome')),
                ('last_name', models.CharField(help_text='Defina seu sobrenome, exemplo: da Silva', max_length=40, verbose_name='Nome')),
                ('username', models.CharField(help_text='Requer 15 caracteres ou menos', max_length=15, unique=True, verbose_name='usuario')),
                ('password', models.CharField(help_text='Digite uma senha com 15 caracteres ou menos', max_length=15, verbose_name='senha')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designado para Superusu치rios ', verbose_name='Status de Superusu치rio')),
                ('is_staff', models.BooleanField(default=False, help_text='Designado para usuarios da equipe', verbose_name='Status de staff')),
                ('is_active', models.BooleanField(default=False, help_text='Designado para usu치rios ativos. \\ Em vez de deletar, desative o mesmo.', verbose_name='active')),
                ('is_student', models.BooleanField(default=False, help_text='Designado para usuarios do tipo Aluno', verbose_name='Aluno')),
                ('is_advisor', models.BooleanField(default=False, help_text='Designado para usuarios do tipo Orientador', verbose_name='Orientador')),
                ('is_supervisor', models.BooleanField(default=False, help_text='Designado para usuarios do tipo Supervisor', verbose_name='Supervisor')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='data de ingresso')),
                ('is_trusty', models.BooleanField(default=False, help_text='Usu치rios com contas confirmadas.', verbose_name='Email confirmado')),
                ('matricula', models.IntegerField()),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
            },
        ),
        migrations.CreateModel(
            name='Advisor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
